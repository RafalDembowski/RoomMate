@model RoomMate.Entities.UserProfileViewModels.UserProfileToEditViewModel
@{
    ViewBag.Title = "Dodaj zakwaterowanie";
    Layout = "~/Views/Shared/_UserProfileLayout.cshtml";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
      integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
      crossorigin="" />
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
        integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
        crossorigin=""></script>
<div class="main-header" style="height: 93vh;">

    <div class="main-container">
        <div class="vertical-nav">
            <div class="vertical-user-photo">
                @if (Model.user.UserImage != null)
                {
                    <img src="@Url.Content(Model.user.UserImage.ImagePath)"/>
                }
                else
                {
                    <img src="/../Content/Image/profile_none.png"/>
                }
                <p>
                    @Html.DisplayFor(model => model.user.FirsName)
                    @Html.DisplayFor(model => model.user.LastName)
                </p>
            </div>
            <ul>
                <li>
                    <i class="fas fa-home"></i><a href="@Url.Action("Dashboard", "UserProfile")">Menu</a>
                </li>
                <li class="active-menu">
                    <i class="fas fa-plus"></i><a class="active-menu" href="#">Nowy nocleg</a>
                </li>
                <li>
                    <i class="fas fa-suitcase"></i><a href="@Url.Action("Customers", "UserProfile")">Rezerwacje</a>
                </li>
            </ul>
        </div>

        <div class="profile-user-container">

            <div class="profile-container">
                @if (ViewBag.Error != null)
                {
                    <div>
                        <p class="text-error-room">@ViewBag.Error</p>
                    </div>
                }
                <h2>Dodaj nocleg</h2>
                @using (Html.BeginForm("AddRoom", "UserProfile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-error-room" })
                    <div class="add-room-container">
                        <div class="profile-container-div profile-add-room">
                            <h3>
                                @Html.ValidationMessageFor(model => model.roomToEdit.Name, "", new { @class = "text-error-room" })
                            </h3>
                            <div class="profile-heading">
                                <h3>
                                    @Html.EditorFor(model => model.roomToEdit.Name, new { htmlAttributes = new { @class = "add-room-input-h3", placeholder = "Wpisz nazwa pokoju" } })
                                </h3>
                            </div>

                            <div>
                                <p class="text-error-room" id="image-error" style="display:none">Błędny format plików.</p>
                            </div>

                            <div class="add-room-img">
                                <img id="roomImg" />
                                <img src="/../Content/Image/add-img.png" id="add-img-photo" class="add-img-photo-style" />
                                @Html.ValidationMessageFor(model => model.images, "", new { @class = "text-error-room" })
                                @Html.TextBoxFor(model => Model.images, "", new { @type = "file", accept = "image/*", @multiple = "multiple", @id = "add-file" })
                            </div>

                            <div class="add-room-txt-container">

                                <div class="max-height-div">
                                    <p class="bold-txt">Opis zakwaterowania:</p>
                                    @Html.ValidationMessageFor(model => model.roomToEdit.Description, "", new { @class = "text-error-room" })
                                    @Html.TextAreaFor(model => model.roomToEdit.Description, new { @class = "add-room-txtarea", placeholder = "Wpisz tutaj opis swojego zakwaterowania." })
                                </div>

                                <div>
                                    <p class="bold-txt">Wyposażenie zakwaterowania:</p>

                                    <div class="equipment-container-searching" style="height:100%;">
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsAirConditioning)
                                            <p><i class="fas fa-fan"></i>Klimatyzacja</p>
                                        </div>
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsKitchen)
                                            <p><i class="fas fa-utensils"></i>Kuchnia</p>
                                        </div>
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsParking)
                                            <p><i class="fas fa-parking"></i> Parking</p>
                                        </div>
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsTelevision)
                                            <p><i class="fas fa-tv"></i>Telewizja</p>
                                        </div>
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsWifi)
                                            <p><i class="fas fa-wifi"></i>Wi-fi</p>
                                        </div>
                                        <div class="equipment-item-add">
                                            @Html.CheckBoxFor(model => Model.equipmentToEdit.IsWashingMachine)
                                            <p><i class="fas fa-tshirt"></i>Pralka</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="max-height-div">
                                    <p class="bold-txt">Szczegóły zakwaterowania:</p>
                                    @Html.ValidationMessageFor(model => model.roomToEdit.NumberOfGuests, "", new { @class = "text-error-room" })
                                    <div class="add-rom-row">
                                        <label>Liczba gości</label>   <p> @Html.EditorFor(model => model.roomToEdit.NumberOfGuests, new { htmlAttributes = new { min = 0, max = 15, @class = "add-room-input", placeholder = "Wpisz liczbę gości" } })</p>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.roomToEdit.Price, "", new { @class = "text-error-room" })
                                    <div class="add-rom-row">
                                        <label>Cena za noc:</label>  <p>@Html.EditorFor(model => model.roomToEdit.Price, new { htmlAttributes = new { min = 0, @class = "add-room-input", placeholder = "Wpisz cene za jedną noc" } }) zł</p>
                                    </div>
                                </div>

                            </div>

                        </div>

                        <div class="profile-container-div profile-add-room-map">
                            <div class="profile-heading">
                                <h3>Lokalizacja</h3>

                            </div>
                            <p style="padding-top:10px">Przed zapisaniem musisz wybrać i wyszukać swoją lokalizację.</p>
                            <div class="add-room-flex">
                                <div class="address-txt-map">
                                    @Html.ValidationMessageFor(model => model.addressToEdit.City, "", new { @class = "text-error-room" })
                                    <p>
                                        @Html.EditorFor(model => model.addressToEdit.City, new { htmlAttributes = new { @class = "add-room-input bold-txt", placeholder = "Wpisz nazwę miasta", id = "city" } })
                                    </p>
                                    @Html.ValidationMessageFor(model => model.addressToEdit.Street, "", new { @class = "text-error-room" })
                                    @Html.EditorFor(model => model.addressToEdit.Street, new { htmlAttributes = new { @class = "add-room-input", placeholder = "Wpisz ulice", id = "street" } })

                                    @Html.ValidationMessageFor(model => model.addressToEdit.Flat, "", new { @class = "text-error-room" })
                                    @Html.EditorFor(model => model.addressToEdit.Flat, new { htmlAttributes = new { @class = "add-room-input", placeholder = "Wpisz numer dom", id = "house" } })

                                    @Html.ValidationMessageFor(model => model.addressToEdit.PostCode, "", new { @class = "text-error-room" })
                                    @Html.EditorFor(model => model.addressToEdit.PostCode, new { htmlAttributes = new { @class = "add-room-input", placeholder = "Wpisz kod pocztowy", id = "postCode" } })

                                    @Html.HiddenFor(model => model.addressToEdit.Lat, new { id = "SearchAddressLatitude" })
                                    @Html.HiddenFor(model => model.addressToEdit.Lon, new { id = "SearchAddressLongitude" })

                                    <div class="profile-save-btn" id="searchCity">Wyszukaj</div>

                                </div>
                                <div class="address-map">
                                    <div id="map" class="map"></div>
                                    <div id="popup" class="ol-popup">
                                        <div id="popup-content"></div>
                                    </div>

                                </div>

                            </div>
                            <button class="profile-save-btn" id="save-room">Zapisz</button>
                        </div>

                    </div>

                }
            </div>
        </div>

    </div>
</div>

<script>
     var map = new ol.Map({
        target: 'map',
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          })
        ],
        view: new ol.View({
          center: ol.proj.fromLonLat([37.41, 8.82]),
          zoom: 0
        })
     });
</script>

<script src="~/Content/Scripts/ProfileUserScripts.js"></script>





