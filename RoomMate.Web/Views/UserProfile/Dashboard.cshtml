@model RoomMate.Entities.UserProfileViewModels.UserProfileToDisplayViewModel
@using PagedList.Mvc;
@using PagedList

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_UserProfileLayout.cshtml";
}

<div class="main-header" style="height: 100%;">

    <div class="background-shadow"></div>
    <div class="center-modal close-delete-modal">
        <div class="modal" id="modal-delete">

            <div class="modal-header" id="modal-header-delete">
                <h2>Usuwanie</h2>
                <a href="#" class="modal-dismiss close-delete-modal"><i class="text-dark fas fa-times p-2"></i></a>
            </div>

            <div class="modal-body">
                <div class="modal-row-delete">
                    <h2>Potwierdzenie</h2>
                    <p>Na pewno chcesz usunąć te zakwaterowanie?</p>
                </div>
            </div>

            <div class="modal-footer">
                <button id="button-cancel" class="close-delete-modal">Anuluj</button>
                @using (Html.BeginForm("Delete", "UserProfile"))
                {
                    <button id="button-delete">Usuń</button>
                }
            </div>

        </div>
    </div>

    <div class="main-container">
        <div class="vertical-nav">
            <div class="vertical-user-photo">
                @if (Model.user.UserImage != null)
                {
                    <img src="@Url.Content(Model.user.UserImage.ImagePath)"/>
                }
                else
                {
                    <img src="/../Content/Image/profile_none.png"/>
                }
                <p>
                    @Html.DisplayFor(model => model.user.FirsName)
                    @Html.DisplayFor(model => model.user.LastName)
                </p>
            </div>
            <ul>
                <li class="active-menu">
                    <i class="fas fa-home"></i><a class="active-menu" href="#">Menu</a>
                </li>
                <li>
                    <i class="fas fa-plus"></i><a href="@Url.Action("AddRoom", "UserProfile")">Nowy nocleg</a>
                </li>
                <li>
                    <i class="fas fa-suitcase"></i><a href="@Url.Action("Customers", "UserProfile")">Rezerwacje</a>
                </li>
            </ul>
        </div>

        <div class="profile-user-container">


            <div class="profile-container">
                @if (ViewBag.Error != null)
                {
                    <div>
                        <p class="text-error-room">@ViewBag.Error</p>
                    </div>
                }
                <h2>Menu</h2>

                <div class="profile-container-flex">
                    <div class="profile-container-div profile-user">

                        <div class="profile-heading">
                            <h3>Konto użytkownika</h3>
                            <i class="far fa-edit toClick" id="editUser"></i>
                            <i class="far fa-times-circle toClick" id="cancelEditUser"></i>
                        </div>
                        @using (Html.BeginForm("Dashboard", "UserProfile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <div class="profile-body">
                                <div class="profile-body-img">
                                    @Html.HiddenFor(model => model.user.UserImage.UserImageID)
                                    @if (Model.user.UserImage != null)
                                    {
                                        <img src="@Url.Content(Model.user.UserImage.ImagePath)" id="add-img-photo">
                                    }
                                    else
                                    {
                                        <img src="/../Content/Image/profile_none.png" id="add-img-photo" />
                                    }
                                    @Html.TextBoxFor(model => Model.images, "", new { @type = "file", accept = "image/*", @id = "add-file" })
                                </div>

                                <div style="width:90%">
                                    <div class="profile-body-txt" id="displayUserInformation">
                                        <div class="row">
                                            <label>Login:</label>  <p>@Html.DisplayFor(model => model.user.UserName)</p>
                                        </div>
                                        <div class="row">
                                            <label>Imię:</label>  <p>@Html.DisplayFor(model => model.user.FirsName)</p>
                                        </div>
                                        <div class="row">
                                            <label>Nazwisko:</label>  <p>@Html.DisplayFor(model => model.user.LastName)</p>
                                        </div>
                                        <div class="row">
                                            <label>Email:</label>  <p>@Html.DisplayFor(model => model.user.Email)</p>
                                        </div>

                                    </div>

                                    <div class="profile-body-txt" id="editUserInformation">
                                        @Html.HiddenFor(model => model.user.UserID)
                                        @Html.HiddenFor(model => model.user.PasswordHash)
                                        @Html.HiddenFor(model => model.user.IsEmailVerified)

                                        @Html.ValidationMessageFor(model => model.user.FirsName, "", new { @class = "text-error" })
                                        @Html.ValidationMessageFor(model => model.user.LastName, "", new { @class = "text-error" })
                                        <div class="row">
                                            <label>Login:</label>  <p>@Html.EditorFor(model => model.user.UserName, new { htmlAttributes = new { @class = "edit-user-input" } })</p>
                                        </div>
                                        <div class="row">
                                            <label>Imię:</label>  <p>@Html.EditorFor(model => model.user.FirsName, new { htmlAttributes = new { @class = "edit-user-input" } })</p>
                                        </div>
                                        <div class="row">
                                            <label>Nazwisko:</label>  <p>@Html.EditorFor(model => model.user.LastName, new { htmlAttributes = new { @class = "edit-user-input" } })</p>
                                        </div>

                                        <div class="row">
                                            <label>Email:</label>  <p>@Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "edit-user-input" } })</p>
                                        </div>



                                        <div style="display:block;">
                                            <button class="profile-save-btn">Zapisz</button>
                                        </div>

                                    </div>

                                </div>

                            </div>
                        }
                    </div>

                    <div class="profile-container-div profile-information">
                        <div class="profile-information-img">
                            <i class="fas fa-home"></i>
                        </div>
                        <h2>@Model.rooms.Count</h2>
                        <p>Liczba Twoich zakwaterowań</p>
                    </div>

                    <div class="profile-container-div profile-information">
                        <div class="profile-information-img">
                            <i class="fas fa-suitcase"></i>
                        </div>
                        <h2>0</h2>
                        <p>Liczba zrealizowanych rezerwacji</p>
                    </div>

                </div>

                <div class="profile-container-div profile-container-accommodation">

                    <div class="profile-heading">
                        <h3>Zakwaterowania:</h3>
                        <a href="@Url.Action("AddRoom", "UserProfile")">
                            <i class="far fa-plus-square toClick"></i>
                        </a>
                    </div>
                    @if (Model.rooms.Count == 0)
                    {
                        <div class="profile-container-accommodation-row">
                            <p>Nie masz jeszcze stworzonego żadnego zakwaterowania.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var room in ViewBag.OnePageOfRooms)
                        {
                            <div class="profile-container-accommodation-row">
                                <div style="min-width: 750px;">
                                    <div>
                                        <div class="profile-container-accommodation-img">
                                            @{ var roomImage = Model.roomImages.Where(x => x.Room.RoomID == @room.RoomID).FirstOrDefault();}
                                            @if (roomImage != null)
                                            {
                                                <img src="@Url.Content(roomImage.Path)">
                                            }
                                            else
                                            {
                                                <img src="~/Content/Image/no-image.png">
                                            }
                                        </div>
                                    </div>

                                    <div class="profile-container-accommodation-description">
                                        <p class="bold-txt">@room.Name</p>
                                        <p>
                                            @room.Address.City
                                            @room.Address.Street
                                            @room.Address.Flat
                                            @room.Address.PostCode
                                        </p>
                                    </div>
                                </div>
                                <div class="profile-container-accommodation-icon">

                                    <a href="@Url.Action("DisplayRoom", "UserProfile", new { id = @room.RoomID })">
                                        <i class="far fa-question-circle toClick"></i>
                                    </a>

                                    <i class="far fa-trash-alt toClick delete-modal" id="@room.RoomID "></i>
                                </div>
                            </div>
                        }
                        <div>
                            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfRooms, page => Url.Action("Dashboard", new { page }))
                        </div>
                    }
                </div>



            </div>

        </div>
    </div>

</div>

<script src="~/Content/Scripts/ProfileUserScripts.js"></script>
